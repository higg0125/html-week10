/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/***********************************************************
				        DEFAULTS
***********************************************************/

html{
    font-size:16px;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

h1{
    font-size:2.2rem;
    font-weight:bold;
    padding:10px 0 15px;
}

h2{
    font-size:1.5rem;
    padding:40px 0 10px;
}

.container{
    width:1024px;
    margin:0 auto;
}

nav ul li{
    padding:10px;
}

.sidebarbox{
    background:rgb(128,128,128);
    border:2px solid rgb(50,50,50);
}

#content p{
    padding:10px;
}

#rainbow div{ height:30px; }
#re{ background: red; }
#or{ background: orange; }
#ye{ background: yellow; }
#gr{ background: green; }
#bl{ background: blue; }
#in{ background: indigo; }
#vi{ background: violet; }

/***********************************************************
				        Flexbox
***********************************************************/

nav ul{
	/* set the containor to display:flex */
	background-color: antiquewhite;
	display: flex;
	/* justfy contents tell the browser how you want the items inside the felex box to behave on the main axis */
	justify-content: space-space space-evenly;
}

/* the div class is body flex contains the main and the aside */
.bodyflex{
	display: flex;
}

main{
	width: 75%;
}

aside{
	width: 25%;
/* display flex is not inherited - so if you want the aside to also use flex box you have to set it */
	display: flex;
	flex-direction: column-reverse;
}

aside .sidebarbox{
	/* by default it is set to "auto", which means shrink the size of the content
	if we give it a number, we assign a level of imprtance to the items - if they all ahve the same number they all ahve the same size importance  */
	flex-basis: 0;
	/* then you have to use flex grow or flex shrink to tell the boxes how you want them to grow or shrink
	 relitvily to the space to have and to eachother  */
	 flex-grow: 1;
}

#fish{
	display: flex;
	/* use flex wrap to allow the flex to wrap to the next lines or as many lines as nessary */
	/* flex-wrap: wrap; */
}

#fish img{
	width: 100%;
}

#rainbow{
	/* without any other instuctions, elements with no content disapper when they are first set to display flex */
	display: flex;
}

#rainbow div{
	flex-basis: 0;
	flex-grow:1;
}

#rainbow #re, #rainbow #bl{
	/* this weill set these two divs to be twice the size of the other five relivive to the amount of space they have */
	flex-grow: 2;
}

#rainbow #gr{
	flex-grow: 5;
}

#content{
	/* divs with contents will try to take as much space that they need, relitve to the content of the other boxes */
	display: flex;
}

/* flex is a short hand that combines flex-grow, flex-shrink,flex-basis (in that order)  */
#content p:nth-child(1){ flex: 1 2 0;}
#content p:nth-child(2){ flex: 4 1 0;}
#content p:nth-child(3){ flex: 1 1 0;}
#content p:nth-child(4){ flex: 3 8 0;}
#content p:nth-child(5){ flex: 1 2 0;}